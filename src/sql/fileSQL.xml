<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="bengineer">
	<select id="getref" resultType="int" parameterType="fileDTO">
		select num from BEfilelist where orgname = #{orgname} and folder_ref = #{folder_ref}
	</select>
	<select id="getfiles" resultType="fileDTO" parameterType="int">
		<![CDATA[
			select * from BEfilelist where folder_ref = #{folder_ref} and important < 1 order by filetype desc, important asc, filename asc
		]]>
	</select>
	<select id="getfilesforhits" resultType="fileDTO" parameterType="string">
		<![CDATA[
			select * from BEfilelist where owner = #{owner} and important < 1 and orgname != #{owner} and hitcount > 1 order by filetype desc, important asc, filename asc
		]]>
	</select>
	<select id="gettrashes" resultType="fileDTO" parameterType="int">
		select * from BEfilelist where folder_ref = #{folder_ref} order by filetype desc, filename asc
	</select>
	<insert id="makebasedir" parameterType="fileDTO">
		insert into BEfilelist(num,folder_ref,filename,orgname,filetype,uploaddate,updatedate,important,owner) values(BEfilelist_seq.NEXTVAL, #{folder_ref}, #{filename}, #{orgname}, 'dir', sysdate, sysdate, -1, #{owner})
	</insert>
	<insert id="makedir" parameterType="fileDTO">
		insert into BEfilelist(num,folder_ref,filename,orgname,filetype,uploaddate,updatedate,owner) values(BEfilelist_seq.NEXTVAL, #{folder_ref}, #{filename}, #{orgname}, 'dir', sysdate, sysdate, #{owner})
	</insert>
	<select id="getaddr" resultType="fileDTO" parameterType="int">
		select * from BEfilelist where num = #{folder_ref}
	</select>
	<insert id="upload" parameterType="fileDTO">
		insert into BEfilelist(num, folder_ref, filename, orgname, filetype, filesize, uploaddate, updatedate, owner) values(BEfilelist_seq.NEXTVAL, #{folder_ref}, #{filename}, #{orgname}, #{filetype}, #{filesize}, sysdate, sysdate, #{owner})
	</insert>
	<update id="changename" parameterType="fileDTO">
		update BEfilelist set filename = #{filename}, orgname = #{orgname}, updatedate = sysdate where num = #{num}
	</update>
	<select id="checksharekey" resultType="int" parameterType="String">
		select count(*) from BEkeylist where share_key = #{code}
	</select>
	<update id="hit" parameterType="int">
		update BEfilelist set hitcount = hitcount + 1 where num = #{file_ref}
	</update>
	<update id="newname" parameterType="fileDTO">
		update BEfilelist set orgname = #{orgname} where num = #{num}
	</update>
	<update id="updatefile" parameterType="fileDTO">
		update BEfilelist set filename = #{filename}, filesize = #{filesize}, updatedate = sysdate where folder_ref = #{folder_ref} and orgname = #{orgname}
	</update>
	<select id="open" parameterType="string" resultType="keyDTO">
		select * from BEkeylist where share_key = #{share_key}
	</select>
	<insert id="getsharedfile" parameterType="shareDTO">
		insert into BEsharelist(num, share_key, id) values(BEsharelist_seq.NEXTVAL, #{share_key}, #{id})
	</insert>
	<select id="keycheck" parameterType="keyDTO" resultType="string">
		select share_key from BEkeylist where filenum = #{filenum} and enddate = #{enddate} and rw = #{rw}
	</select>
	<insert id="insertkey" parameterType="keyDTO">
		insert into BEkeylist(share_key, filenum, enddate, rw) values(#{share_key}, #{filenum}, #{enddate}, #{rw})
	</insert>
	<select id="getkey" parameterType="shareDTO" resultType="keyDTO">
		select b.share_key share_key, b.filenum filenum, b.enddate enddate, b.rw rw from BEsharelist a inner join BEkeylist b on a.share_key = b.share_key where a.id = #{id} and b.filenum = #{num} and b.enddate >= sysdate
	</select>
	<select id="mysharedfile" parameterType="string" resultType="fileDTO">
		<![CDATA[
			select * from BEfilelist where num in (select b.filenum from BEsharelist a inner join BEkeylist b on a.share_key = b.share_key where a.id = #{id} and b.enddate >= sysdate) and important < 1 order by filetype desc, important asc, filename asc
		]]>
	</select>
	<delete id="deletefile" parameterType="int">
		delete from BEfilelist where num = #{num}
	</delete>
	<delete id="deletefiles" parameterType="list">
		delete from BEfilelist where num in
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	<update id="throwtotrashcan" parameterType="int">
		update BEfilelist set important = 1 where num = #{filenum}
	</update>
	<update id="throwalltotrashcan" parameterType="list">
		update BEfilelist set important = 1 where num in
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
	<insert id="inserttrash" parameterType="int">
		insert into BEtrashcan(num, filenum, deletedate) values(BEtrashcan_seq.NEXTVAL, #{filenum}, sysdate)
	</insert>
	<delete id="deletetrash" parameterType="int">
		delete from BEtrashcan where filenum = #{filenum}
	</delete>
	<delete id="deletetrashes" parameterType="list">
		delete from BEtrashcan where filenum in
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	<select id="checktrash" parameterType="int" resultType="java.sql.Date">
		select deletedate from BEtrashcan where filenum = #{num}
	</select>
	<select id="checkall1" parameterType="list" resultType="fileDTO">
		select * from BEfilelist where important = -1 and num in
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	<select id="checkall2" parameterType="list" resultType="fileDTO">
		select * from BEfilelist where filesize > 10*1024*1024 and num in
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	<update id="repairfiles" parameterType="list">
		update BEfilelist set important = 0 where num in 
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach> 
	</update>
	<update id="movefiles" parameterType="listDTO">
		update BEfilelist set folder_ref = #{num} where num in 
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach> 
	</update>
	<select id="getfoldernum" parameterType="fileDTO" resultType="int">
		select num from BEfilelist where folder_ref = #{folder_ref} and orgname = #{orgname} and num != #{num}
	</select>
	<select id="mytrashcan" parameterType="String" resultType="fileDTO">
		select * from BEfilelist where owner = #{owner} and important = 1 and folder_ref not in (select num from BEfilelist where owner = #{owner} and important = 1) order by filetype desc, filename asc
	</select>
	<select id="mytrashcanfolder" parameterType="int" resultType="fileDTO">
		select * from BEfilelist where folder_ref = #{folder_ref} and important = 1 order by filetype desc, filename asc
	</select>
	<select id="getparentnum" parameterType="hashmap" resultType="int">
		select num from BEfilelist where owner = #{owner} and important = -1 and orgname = #{orgname}
	</select>
	<update id="autoarrange" parameterType="fileDTO">
		update BEfilelist set folder_ref = #{num} where owner = #{owner} and orgname = #{orgname}
	</update>
	<update id="changeref" parameterType="fileDTO">
		update BEfilelist set folder_ref = #{folder_ref} where num = #{num}
	</update>
	<select id="getsharedpeople" parameterType="int" resultType="keyDTO">
		select a.id share_key, b.enddate enddate, b.rw rw from BEsharelist a inner join BEkeylist b on a.share_key = b.share_key where b.filenum = #{filenum} and b.enddate >= sysdate
	</select>
	<delete id="deleteoldkey">
		<![CDATA[
			delete from BEkeylist where enddate < sysdate or filenum not in (select num from BEfilelist)
		]]>
	</delete>
	<delete id="unshare" parameterType="shareDTO">
		delete from BEsharelist where id = #{id} and share_key in (select share_key from BEkeylist where filenum = #{num})
	</delete>
	<delete id="unshareall" parameterType="int">
		delete from BEkeylist where filenum = #{num}
	</delete>
	<delete id="deleteunshared">
		delete from BEsharelist where share_key not in (select share_key from BEkeylist)
	</delete>
	<select id="oldtrash" parameterType="Date" resultType="trashcanDTO">
		<![CDATA[
			select * from BEtrashcan where deletedate < #{deletedate}
		]]> 
	</select>
	<update id="uploadsize" parameterType="listDTO">
		update BEfilelist set filesize = filesize + #{longnum} where num in 
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item.num}
		</foreach> 
	</update>
	<update id="updatesize" parameterType="fileDTO">
		update BEfilelist set filesize = filesize + #{filesize} where num = #{num}
	</update>
	<select id="size" parameterType="int" resultType="fileDTO"> <!-- 그래프 -->
		select * from befilelist where folder_ref=#{folder_ref}
	</select>
	<update id="hot" parameterType="int"> <!-- 중요파일 -->
		update BEfilelist set important = 2 where num = #{num}
	</update>
	<update id="updateowner" parameterType="string">
		update BEfilelist set owner = #{owner} where owner = #{owner}
	</update>
	<select id="beCheckfolder" resultType="int" parameterType="string">
		select count(*) from befilelist where owner=#{id}
	</select>
	<insert id="copyfile" parameterType="fileDTO">
		insert into befilelist(num,folder_ref,filename,orgname,filetype,filesize,uploaddate,updatedate,important,owner) values(BEtrashcan_seq.NEXTVAL,#{folder_ref},#{filename},#{orgname},#{filetype},#{filesize},sysdate,sysdate,0,#{owner})
	</insert>
	<update id="changeowners" parameterType="listDTO">
		update BEfilelist set owner = #{string} where num in 
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach> 
	</update>
	<select id="getrecentfiles" parameterType="fileDTO" resultType="fileDTO">
		select * from BEfilelist where owner = #{owner} and updatedate > #{updatedate} and (filetype != 'dir' or filename = orgname) order by filetype desc, important asc, filename asc 
	</select>
	<!-- 초성 검색에 필요한 파일 목록들  / parameterType="string" where email=${email}-->
	<select id="font" resultType="fileDTO">
		select * from befilelist
	</select>
	<select id="searchfiles" parameterType="list" resultType="fileDTO">
		select * from BEfilelist where filename in
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	<select id="shortcut" resultType="fileDTO" parameterType="fileDTO">
		<![CDATA[
			select * from BEfilelist where owner = #{owner} and important < 1 and filename = #{filename} and hitcount = #{hitcount} order by filetype desc, important asc, filename asc
		]]>
	</select>
	<select id="imageNum" parameterType="string" resultType="int">
		select num from BEfilelist where owner = #{owner} and orgname='image'
	</select>
	<select id="imageList" parameterType="fileDto" resultType="fileDTO">
		select orgname from BEfilelist where owner = #{owner} and folder_ref=#{folder_ref}
	</select>
	<select id="getusingspace" parameterType="string" resultType="long">
		select filesize from BEfilelist where owner = #{owner} and folder_ref = 0
	</select>
</mapper>